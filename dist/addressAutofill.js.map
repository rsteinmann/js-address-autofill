{"version":3,"sources":["webpack://AddressAutofill/webpack/bootstrap","webpack://AddressAutofill/./node_modules/deepmerge/dist/cjs.js","webpack://AddressAutofill/./src/addressAutofill.js","webpack://AddressAutofill/./src/gMaps.js","webpack://AddressAutofill/./src/index.js"],"names":["defaultOptions","autoConstruct","enableInputFillIn","useBrowserGeolocation","inputSelector","baseLocation","lat","lng","googlePlacesConfig","mapResult","use","resultType","targetSelector","bindValue","AddressAutofill","context","options","HTMLElement","HTMLDocument","console","error","inputElement","querySelector","HTMLInputElement","deepmerge","hasInstantiated","result","services","getAttribute","googleScriptParams","key","gMaps","log","autocomplete","google","maps","places","Autocomplete","addEventListener","event","keyCode","preventDefault","stopPropagation","addListener","placeChanged","bindInputs","getAddress","place","getPlace","getMappedResults","setAddress","searchObject","input","getFormValues","sessionToken","AutocompleteSessionToken","getPlacePredictions","predictions","getDetails","placeId","place_id","fields","status","PlacesServiceStatus","OK","forEach","resultItem","element","target","warn","value","asString","formValues","route","street_number","postal_code","locality","country","mapping","trim","mappings","results","mapItem","itemValue","geometry","location","address_component","address_components","filter","component","types","includes","length","push","callback","defaultMapsParams","v","isMapsScriptInjected","isMapsScriptLoaded","addressAutofillInstances","addInstance","instance","init","getMapsUrl","mapsParams","mapsUrl","injectMapsScript","mapsScript","document","createElement","src","body","appendChild","injectMapContainer","mapsContainer","id","style","display","initAutocomplete","initPlacesServices","LatLng","AutocompleteService","Map","center","zoom","PlacesService","geolocate","reference","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","circle","Circle","radius","accuracy","setBounds","getBounds","instances","injectMaps","window"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,IAAI;AACN;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;AAEA;;;;AAGA,IAAMA,cAAc,GAAG;AACrBC,eAAa,EA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","file":"addressAutofill.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import * as gMaps from './gMaps'\nimport * as deepmerge from 'deepmerge'\n\n/**\n * The Modules default configuration.\n */\nconst defaultOptions = {\n  autoConstruct: false, // if set to true the module will autoconstruct and attach to window object as \"addressAutofill\"\n  enableInputFillIn: true, // Fills out form with configured selectors on selection of google address\n  useBrowserGeolocation: true, // Uses the browser's geolocation API to ask the user for her current location (makes predictions more precise)\n  inputSelector: '[data-autocomplete]',\n  baseLocation: { lat: 51.1642292, lng: 10.4541194 }, // Sets the starting location where adresses should be searched from (default: mid of germany)\n  googlePlacesConfig: {}, // This configuration will be passed to Google Places API\n  mapResult: [\n    {\n      use: 'long_name',\n      resultType: 'route',\n      targetSelector: '[name=\"streetName\"]'\n    },\n    {\n      use: 'short_name',                        // Use from Api result 'short_name' | 'long_name'\n      resultType: 'street_number',              // Name of the type from Api result\n      targetSelector: '[name=\"streetNumber\"]',  // Target element that should be filled with this information\n      bindValue: true                           // If set to true the user input will be backwritten to maps input\n    },\n    {\n      use: 'long_name',\n      resultType: 'locality',\n      targetSelector: '[name=\"city\"]'\n    },\n    {\n      use: 'long_name',\n      resultType: 'country',\n      targetSelector: '[name=\"country\"]'\n    },\n    {\n      use: 'short_name',\n      resultType: 'postal_code',\n      targetSelector: '[name=\"postalCode\"]'\n    },\n    {\n      use: 'geo',\n      resultType: 'lat',\n      targetSelector: '[name=\"lat\"]'\n    },\n    {\n      use: 'geo',\n      resultType: 'lng',\n      targetSelector: '[name=\"lng\"]'\n    }\n  ]\n}\n\n\nexport default class AddressAutofill {\n  constructor (context, options = {}) {\n    if (typeof context !== 'object' || (!(context instanceof HTMLElement) && !(context instanceof HTMLDocument))) {\n      console.error('Please choose a valid context for AddressAutofill! Given:', context)\n      return null\n    }\n    this.context = context\n    this.inputElement = this.context.querySelector('[data-autocomplete]')\n    if (!(this.inputElement instanceof HTMLInputElement)) {\n      console.error('Please choose a valid input field for AddressAutofill! Given:', this.inputElement)\n      return null\n    }\n    this.options = deepmerge(defaultOptions, options)\n    this.hasInstantiated = false\n    this.result = null\n    this.services = {}\n    // Override Api Key Config\n    if (this.inputElement.getAttribute('data-autocomplete')) {\n      this.options.googleScriptParams.key = this.inputElement.getAttribute('data-autocomplete')\n    }\n    // Add instance to gMaps\n    gMaps.addInstance(this)\n\n    return this\n  }\n\n\n  /**\n   * Initializes the Module.\n   * Gets fired as callback when google maps has finished loading.\n   */\n  init () {\n    if (this.hasInstantiated) {\n      return false\n    }\n    console.log('init', this)\n    // eslint-disable-next-line no-undef\n    this.autocomplete = new google.maps.places.Autocomplete(this.inputElement, this.options.googlePlacesConfig)\n    if (this.options.useBrowserGeolocation) {\n      gMaps.geolocate(this.autocomplete)\n    }\n    gMaps.initPlacesServices(this)\n    // Capture Enter Press\n    this.inputElement.addEventListener('keydown', event => {\n      if (event.keyCode == 13) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n    })\n    // When the user selects an address from the dropdown, fire callback\n    this.autocomplete.addListener('place_changed', () => this.placeChanged())\n    bindInputs (this.options.mapResult, this.context, () => this.getAddress() )\n    this.hasInstantiated = true\n    return this.hasInstantiated\n  }\n\n\n  /**\n   * Callback that gets fired when a new place has been selected.\n   */\n  placeChanged (place) {\n    place = place || this.autocomplete.getPlace()\n    this.result = getMappedResults(this.options.mapResult, place)\n    if (this.options.enableInputFillIn) {\n      this.setAddress()\n    }\n  }\n\n\n  /**\n   * Collects the form data and sends it to google autocomplete service to get back a place.\n   */\n  getAddress() {\n    const searchObject = { \n      ...{\n        input: this.getFormValues(true),\n        // eslint-disable-next-line no-undef\n        sessionToken: new google.maps.places.AutocompleteSessionToken()\n      }, \n      ...this.options.googlePlacesConfig\n    }\n    this.services.autocomplete.getPlacePredictions(searchObject,\n      (predictions)=> {\n        this.services.places.getDetails({ \n          placeId: predictions[0].place_id, \n          fields: ['geometry', 'address_component']\n        },\n        (place, status) => {\n          // eslint-disable-next-line no-undef\n          if (status == google.maps.places.PlacesServiceStatus.OK) {\n            this.placeChanged(place)\n          }\n        })\n      })\n  }\n\n\n  /**\n   * Sets the address found by the Places API to the configured fields.\n   */\n  setAddress() {\n    this.result.forEach(resultItem => {\n      const element = this.context.querySelector(resultItem.target)\n      if (!element) {\n        console.warn(`AddressAutofill: Could not find in element ${resultItem.target} in DOM, please check your config!`)\n      } else {\n        element.value = resultItem.value\n      }\n    })\n  }\n\n\n  /**\n   * Gets all values from form and transforms them into object or string.\n   * @param {boolean} asString - if set to true it returns as string\n   * @return {object|string}\n   */\n  getFormValues (asString = false) {\n    let formValues = {\n      route: '',\n      street_number: '',\n      postal_code: '',\n      locality: '',\n      country: ''\n    }\n    this.options.mapResult.forEach(mapping => {\n      const value = this.context.querySelector(mapping.targetSelector).value\n      formValues[mapping.resultType] = value\n    })\n    if (!asString) {\n      return formValues\n    } else {\n      return `${formValues.route} ${formValues.street_number}, ${formValues.postal_code} ${formValues.locality}, ${formValues.country}`.trim()\n    }\n  }\n}\n\n\n/**\n * Maps the Google places results to a given structure.\n * @param {Array} mappings - An Array that contains objects with use, resultsType, targetSelector properties\n * @param {Object} place - The GooglePlaces result place object.\n */\nfunction getMappedResults(mappings, place) {\n  let results = []\n  // Map the result data\n  mappings.forEach(mapItem => {\n    let itemValue\n    if (mapItem.resultType === 'lat') {\n      itemValue = place.geometry.location.lat()\n    }\n    else if (mapItem.resultType === 'lng') {\n      itemValue = place.geometry.location.lng()\n    }\n    else {\n      var address_component = place.address_components.filter(component => component.types.includes(mapItem.resultType))\n      if (address_component.length > 0) {\n        itemValue = address_component[0][mapItem.use]\n      } else {\n        itemValue = ''\n      }\n    }\n    results.push({\n      target: mapItem.targetSelector,\n      value: itemValue\n    })\n  })\n  return results\n}\n\n\n/**\n * Binds to all input fields that are configured in mappings.\n * @param {Array} mappings - An Array that contains objects with use, resultsType, targetSelector properties\n * @param {HTMLElement} context - Context in which the input fields are searched\n * @param {Function} callback - Callback that gets fired\n */\nfunction bindInputs (mappings, context, callback) {\n  mappings.forEach(mapping => {\n    if (mapping.bindValue && mapping.bindValue === true) {\n      context\n        .querySelector(mapping.targetSelector)\n        .addEventListener('keyup', event => callback(event))\n    }\n  })\n}\n","/**\n *  This configuration will be passed to Google Places API as urlParams.\n */\nconst defaultMapsParams = {\n  v: '3.39', // Sets google maps to a specific version\n  key: 'YOUR_KEY_IS_REQUIRED_HERE', // Sets the google places api key\n}\n\n\n/**\n * A state that tells if the Google Maps Api Script has been injected to dom already.\n */\nlet isMapsScriptInjected = false\n\n\n/**\n * A state that tells if the Google Maps Api Script has been loaded already.\n */\nlet isMapsScriptLoaded = false\n\n\n/**\n * \n */\nlet addressAutofillInstances = []\n\n\n/**\n * Adds a new instance to storage.\n * @param {AddressAutocomplete} instance - An instance of AddressAutocomplete.\n */\nexport function addInstance (instance) {\n  if (isMapsScriptLoaded) {\n    instance.init()\n  } else {\n    addressAutofillInstances.push(instance)\n  }\n}\n\n\n/**\n * Generates a valid Google Places Api Url to fetch the script from.\n * @param {Object} mapsParams - Url-params stored as an object.\n */\nexport function getMapsUrl(mapsParams) {\n  if (typeof mapsParams !== 'object') {\n    return console.error('injectMapsScript: \"params\" should be passed as object!')\n  }\n  if (!mapsParams.key) {\n    return console.error('Please add a valid API key for Google Places to use the service!')\n  }\n  mapsParams = {...defaultMapsParams, ...mapsParams}\n  console.log('mapsParams', mapsParams)\n  let mapsUrl = 'https://maps.googleapis.com/maps/api/js?libraries=places&callback=initAutocomplete'\n  for (const key in mapsParams) {\n    mapsUrl += `&${key}=${mapsParams[key]}`\n  }\n  return mapsUrl\n}\n\n\n/**\n * Injects Google Maps Api script to dom once.\n * @param {String} mapsUrl - Url-params stored as an object.\n */\nexport function injectMapsScript (mapsParams) {\n  if (isMapsScriptInjected) {\n    return false\n  }\n  let mapsScript = document.createElement('script')\n  mapsScript.src = getMapsUrl(mapsParams)\n  document.body.appendChild(mapsScript)\n  isMapsScriptInjected = true\n}\n\n\n/**\n * Creates and injects an invisible google maps container to passed context.\n * @param {HTMLElement} context - The context in which the container is injected\n */\nexport function injectMapContainer (context = document.body) {\n  let mapsContainer = document.createElement('div')\n  mapsContainer.id = 'mapsContainer'\n  mapsContainer.style.display = 'none'\n  context.appendChild(mapsContainer)\n  return mapsContainer\n}\n\n\n/**\n * Callback that creates an autocomplete instance to each stored instance.\n */\nexport function initAutocomplete () {\n  console.log('initAutocomplete => fired!', 'addressAutofillInstances', addressAutofillInstances)\n  isMapsScriptLoaded = true\n  addressAutofillInstances.forEach(instance => {\n    instance.init()\n  })\n}\n\n\n/**\n * Instantitates several google api services required to request addresses programatically.\n * @param {AddressAutofill} instance - Any instance of AddressAutofill\n */\nexport function initPlacesServices (instance) {\n  let mapsContainer = injectMapContainer(instance.context)\n  // eslint-disable-next-line no-undef\n  const baseLocation = new google.maps.LatLng(instance.options.baseLocation.lat, instance.options.baseLocation.lng)\n  // eslint-disable-next-line no-undef\n  instance.services.autocomplete = new google.maps.places.AutocompleteService()\n  // eslint-disable-next-line no-undef\n  instance.services.maps = new google.maps.Map(mapsContainer, { center: baseLocation, zoom: 15 })\n  // eslint-disable-next-line no-undef\n  instance.services.places = new google.maps.places.PlacesService(instance.services.maps)\n}\n\n\n/**\n * Tries to get the user's geolocation using the browser's Geolocation API.\n */\nexport function geolocate(reference) {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const location = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }\n      // eslint-disable-next-line no-undef\n      const circle = new google.maps.Circle({\n        center: location,\n        radius: position.coords.accuracy\n      })\n      reference.setBounds(circle.getBounds())\n    })\n  }\n}","import * as gMaps from './gMaps'\nimport AddressAutofill from './addressAutofill'\n\nexport const instances = []\n\nexport const injectMaps = (mapsParams) => gMaps.injectMapsScript(mapsParams)\n\n\nexport const init = (context, options = {}) => {\n  const instance = new AddressAutofill(context, options)\n  instances.push(instance)\n  return instance\n}\n\n\n/**\n * IIFE defines window.initAutocomplete callback and maps it to gMaps\n */\n(() => {\n  if (typeof window.initAutocomplete === 'undefined') {\n    window.initAutocomplete = () => gMaps.initAutocomplete()\n  }\n})()"],"sourceRoot":""}