{"version":3,"sources":["webpack://AddressAutofill/webpack/bootstrap","webpack://AddressAutofill/./src/addressAutofill.js","webpack://AddressAutofill/./src/index.js"],"names":["defaultOptions","autoConstruct","enableInputFillIn","inputSelector","googleScriptParams","key","callback","language","googlePlacesConfig","types","componentRestrictions","country","mapResult","streetName","use","resultType","targetSelector","streetNumber","city","postalCode","lat","lng","AddressAutofill","context","options","inputElement","document","querySelector","autocomplete","result","window","initAutocomplete","google","maps","places","Autocomplete","geolocate","addListener","setAddress","injectMapsScript","console","log","resultMap","place","getPlace","itemName","itemValue","geometry","location","address_components","filter","component","includes","element","warn","value","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","params","error","mapsUrl","mapsScript","createElement","src","body","appendChild","init"],"mappings":"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","file":"addressAutofill.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * The Modules default configuration.\n */\nconst defaultOptions = {\n  autoConstruct: false, // if set to true the module will autoconstruct and attach to window object as \"addressAutofill\"\n  enableInputFillIn: true, // Fills out form with configured selectors on selection of google address\n  inputSelector: '[data-autocomplete]',\n  googleScriptParams: {\n    key: 'AIzaSyBDTdKd1_rCVcZhGzSaAMqYY7LDy9YaLl8',\n    callback: 'initAutocomplete',\n    language: 'de'\n  },\n  googlePlacesConfig: {\n    types: ['address'],\n    componentRestrictions: {country: 'de'}\n  },\n  mapResult: {\n    streetName: {\n      use: 'long_name',\n      resultType: 'route',\n      targetSelector: '[name=\"streetName\"]'\n    },\n    streetNumber: { \n      use: 'short_name',                    // Use from Api result 'short_name' | 'long_name'\n      resultType: 'street_number',          // Name of the type from Api result\n      targetSelector: '[name=\"streetNumber\"]'  // Target element that should be filled with this information\n    },\n    city: {\n      use: 'long_name',\n      resultType: 'locality',\n      targetSelector: '[name=\"city\"]'\n    },\n    country: {\n      use: 'long_name',\n      resultType: 'country',\n      targetSelector: '[name=\"country\"]'\n    },\n    postalCode: {\n      use: 'short_name',\n      resultType: 'postal_code',\n      targetSelector: '[name=\"postalCode\"]'\n    },\n    lat: {\n      use: 'geo',\n      resultType: 'lat',\n      targetSelector: '[name=\"lat\"]'\n    },\n    lng: {\n      use: 'geo',\n      resultType: 'lng',\n      targetSelector: '[name=\"lng\"]'\n    }\n  }\n}\n\n\n// Bias the autocomplete object to the user's geographical location,\n// as supplied by the browser's 'navigator.geolocation' object.\n\nexport default class AddressAutofill {\n  constructor (context, options = {}) {\n    this.options = {...defaultOptions, ...options}\n    this.inputElement = document.querySelector('[data-autocomplete]')\n    this.autocomplete = null\n    this.result = null\n    window.initAutocomplete = () => {\n      // Create the autocomplete instance with custom options\n      this.autocomplete = new google.maps.places.Autocomplete(this.inputElement, this.options.googlePlacesConfig)\n      this.geolocate()\n      // When the user selects an address from the dropdown, populate the address fields in the form.\n      this.autocomplete.addListener('place_changed', () => this.setAddress())\n    }\n    injectMapsScript(this.options.googleScriptParams) // Injects Google Api Script\n    console.log('INIT:', this)\n    return this\n  }\n\n\n  setAddress() {\n    this.result = {}\n    const resultMap = this.options.mapResult\n    const place = this.autocomplete.getPlace()\n    console.log('Place', place)\n\n    // Map the result data\n    for (const itemName in resultMap) {\n      const itemValue = null\n      switch(resultMap[itemName].resultType) {\n        case 'lat':\n          itemValue = place.geometry.location.lat()\n          break\n        case 'lng':\n          itemValue = place.geometry.location.lng()\n          break\n        default:\n          itemValue = place.address_components.filter(component => {\n            // TODO: Fix error on empty entries like street number, etc...\n            return component.types.includes(resultMap[itemName].resultType)\n          })[0][resultMap[itemName].use]\n      }\n      // Optional: Fill out the form\n      if (this.options.enableInputFillIn) {\n        const element = document.querySelector(resultMap[itemName].targetSelector)\n        if (!element) {\n          console.warn(`AddressAutofill: Could not find in element ${resultMap[itemName].targetSelector} in DOM, please check your config!`)\n        } else {\n          this.result[itemName] = itemValue\n          element.value = itemValue\n        }\n      }\n    }\n    console.log ('Result', this.result)\n    \n  }\n\n\n  geolocate() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        }\n        const circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        })\n        console.log('I found your location!', geolocation, circle)\n        this.autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n}\n\n\n/**\n * Injects Google Maps Api script to dom using params from config.\n * @param {object} params \n */\nfunction injectMapsScript (params = null) {\n  if (typeof params !== 'object') {\n    return console.error('\"googleScriptParams\" are required for AddressAutofill configuration!')\n  }\n  if (!params.key) {\n    return console.error('Please add a valid API key for \"AddressAutofill.key\" to run AddressAutofill!')\n  }\n  let mapsUrl = \"https://maps.googleapis.com/maps/api/js?libraries=places\"\n  let mapsScript = document.createElement(\"script\")\n  for (const key in params) {\n    mapsUrl += `&${key}=${params[key]}`\n  }\n  mapsScript.src = mapsUrl\n  document.body.appendChild(mapsScript)\n}","import AddressAutofill from './addressAutofill'\n\nexport const init = (context, options = {}) => new AddressAutofill(context, options)"],"sourceRoot":""}