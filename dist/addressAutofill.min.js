var AddressAutofill=function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}o.r(t);var a={autoConstruct:!1,enableInputFillIn:!0,useBrowserGeolocation:!0,inputSelector:"[data-autocomplete]",googleScriptParams:{key:"YOUR_KEY_IS_REQUIRED_HERE"},googlePlacesConfig:{},mapResult:{streetName:{use:"long_name",resultType:"route",targetSelector:'[name="streetName"]'},streetNumber:{use:"short_name",resultType:"street_number",targetSelector:'[name="streetNumber"]'},city:{use:"long_name",resultType:"locality",targetSelector:'[name="city"]'},country:{use:"long_name",resultType:"country",targetSelector:'[name="country"]'},postalCode:{use:"short_name",resultType:"postal_code",targetSelector:'[name="postalCode"]'},lat:{use:"geo",resultType:"lat",targetSelector:'[name="lat"]'},lng:{use:"geo",resultType:"lng",targetSelector:'[name="lng"]'}}},u=[],c=function(){function e(t){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),"object"===l(t)&&(t instanceof HTMLElement||t instanceof HTMLDocument)?(this.context=t,this.inputElement=this.context.querySelector("[data-autocomplete]"),this.inputElement instanceof HTMLInputElement?(this.options=function(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(o,!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(o).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}({},a,{},o),this.autocomplete=null,this.result=null,this.instance=u.push(this)-1,null!==this.inputElement.getAttribute("data-autocomplete")&&(this.options.googleScriptParams.key=this.inputElement.getAttribute("data-autocomplete")),window.hasGoogleAutocomplete?s(this):("function"!=typeof window.initAutocomplete&&(window.initAutocomplete=function(){return u.forEach((function(e){return s(e)}))}),function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if("object"!==l(e))return console.error('"googleScriptParams" are required for AddressAutofill configuration!');if(!e.key)return console.error('Please add a valid API key for "AddressAutofill" to run AddressAutofill!');var t="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initAutocomplete",o=document.createElement("script");for(var n in e)t+="&".concat(n,"=").concat(e[n]);o.src=t,document.body.appendChild(o),window.hasGoogleAutocomplete=!0}(this.options.googleScriptParams)),this.inputElement.addEventListener("keydown",(function(e){13==e.keyCode&&(e.preventDefault(),e.stopPropagation())})),this):(console.error("Please choose a valid input field for AddressAutofill! Given:",this.inputElement),null)):(console.error("Please choose a valid context for AddressAutofill! Given:",t),null)}var t,o,c;return t=e,(o=[{key:"setAddress",value:function(){var e=this;this.result={};var t=this.options.mapResult,o=this.autocomplete.getPlace(),n=function(n){var r=null;switch(t[n].resultType){case"lat":r=o.geometry.location.lat();break;case"lng":r=o.geometry.location.lng();break;default:var l=o.address_components.filter((function(e){return e.types.includes(t[n].resultType)}));l.length>0&&(r=l[0][t[n].use])}if(e.options.enableInputFillIn){var i=e.context.querySelector(t[n].targetSelector);i?(e.result[n]=r,i.value=r):console.warn("AddressAutofill: Could not find in element ".concat(t[n].targetSelector," in DOM, please check your config!"))}};for(var r in t)n(r)}}])&&i(t.prototype,o),c&&i(t,c),e}();function s(e){var t;e.autocomplete=new google.maps.places.Autocomplete(e.inputElement,e.options.googlePlacesConfig),e.options.useBrowserGeolocation&&(t=e.autocomplete,navigator.geolocation&&navigator.geolocation.getCurrentPosition((function(e){var o={lat:e.coords.latitude,lng:e.coords.longitude},n=new google.maps.Circle({center:o,radius:e.coords.accuracy});t.setBounds(n.getBounds())}))),e.autocomplete.addListener("place_changed",(function(){return e.setAddress()}))}o.d(t,"init",(function(){return p}));var p=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new c(e,t)}}]);
//# sourceMappingURL=addressAutofill.min.js.map