var AddressAutofill=function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}o.r(t);var u={autoConstruct:!1,enableInputFillIn:!0,inputSelector:"[data-autocomplete]",googleScriptParams:{key:"AIzaSyBDTdKd1_rCVcZhGzSaAMqYY7LDy9YaLl8",callback:"initAutocomplete",language:"de"},googlePlacesConfig:{types:["address"],componentRestrictions:{country:"de"}},mapResult:{streetName:{use:"long_name",resultType:"route",targetSelector:'[name="streetName"]'},streetNumber:{use:"short_name",resultType:"street_number",targetSelector:'[name="streetNumber"]'},city:{use:"long_name",resultType:"locality",targetSelector:'[name="city"]'},country:{use:"long_name",resultType:"country",targetSelector:'[name="country"]'},postalCode:{use:"short_name",resultType:"postal_code",targetSelector:'[name="postalCode"]'},lat:{use:"geo",resultType:"lat",targetSelector:'[name="lat"]'},lng:{use:"geo",resultType:"lng",targetSelector:'[name="lng"]'}}},c=function(){function e(t){var o=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=function(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(o,!0).forEach((function(t){l(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(o).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}({},u,{},a),this.inputElement=document.querySelector("[data-autocomplete]"),this.autocomplete=null,this.result=null,window.initAutocomplete=function(){o.autocomplete=new google.maps.places.Autocomplete(o.inputElement,o.options.googlePlacesConfig),o.geolocate(),o.autocomplete.addListener("place_changed",(function(){return o.setAddress()}))},function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if("object"!==r(e))return console.error('"googleScriptParams" are required for AddressAutofill configuration!');if(!e.key)return console.error('Please add a valid API key for "AddressAutofill.key" to run AddressAutofill!');var t="https://maps.googleapis.com/maps/api/js?libraries=places",o=document.createElement("script");for(var n in e)t+="&".concat(n,"=").concat(e[n]);o.src=t,document.body.appendChild(o)}(this.options.googleScriptParams),console.log("INIT:",this),this}var t,o,c;return t=e,(o=[{key:"setAddress",value:function(){var e=this;this.result={};var t=this.options.mapResult,o=this.autocomplete.getPlace();console.log("Place",o);var r=function(r){var n=null;switch(t[r].resultType){case"lat":n=o.geometry.location.lat();break;case"lng":n=o.geometry.location.lng();break;default:n=o.address_components.filter((function(e){return e.types.includes(t[r].resultType)}))[0][t[r].use]}if(e.options.enableInputFillIn){var l=document.querySelector(t[r].targetSelector);l?(e.result[r]=n,l.value=n):console.warn("AddressAutofill: Could not find in element ".concat(t[r].targetSelector," in DOM, please check your config!"))}};for(var n in t)r(n);console.log("Result",this.result)}},{key:"geolocate",value:function(){var e=this;navigator.geolocation&&navigator.geolocation.getCurrentPosition((function(t){var o={lat:t.coords.latitude,lng:t.coords.longitude},r=new google.maps.Circle({center:o,radius:t.coords.accuracy});console.log("I found your location!",o,r),e.autocomplete.setBounds(r.getBounds())}))}}])&&a(t.prototype,o),c&&a(t,c),e}();o.d(t,"init",(function(){return i}));var i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new c(e,t)}}]);
//# sourceMappingURL=addressAutofill.min.js.map